#!/bin/bash

source /winattacklab/.deploy
source /winattacklab/.destroy
source /winattacklab/proxy.env

cd /winattacklab/

case "$DEPLOYED" in
        init)
            echo "`date`: terraform deploy not yet startet" >> /winattacklab/logs/terraform-destroy.log
            echo "`date`: terraform deploy not yet startet"
	    echo "`date`: if you want to deploy, click on \"Run Task\" in the Deploy menu"
            ;;

        deploying)
            ps -ef|grep "/usr/bin/terraform apply"|grep -v grep > /dev/null
            RESULT=$?
            if [ $RESULT -eq 0 ]; then
                echo "`date`: terraform apply is running" >> /winattacklab/logs/terraform-destroy.log
                echo "`date`: terraform apply is running"
		cat /tmp/start-date.log
		echo "`date`: please wait until the infrastructure is fully deployed"
		echo "`date`: you must wait until the infrastructure is fully deployed before you can destroy it"
            else
                echo "`date`: terraform apply not running - deployment should have been finished - let's check ..." >> /winattacklab/logs/terraform-destroy.log
                echo "`date`: terraform apply not running - deployment should have been finished - let's check ..."

                terraform state show 'azurerm_resource_group.winattacklabgroup' >> /winattacklab/logs/terraform-destroy.log
                R1=$?
                if [ $R1 -eq 0 ]; then
                        echo "`date`: deploy was successful: infrastructure running" >> /winattacklab/logs/terraform-destroy.log
                        echo "`date`: deploy was successful: infrastructure running"
			echo "DEPLOYED=\"finished\"" > /winattacklab/.deploy


            		if [ -e /winattacklab/terraform.end ]; then
                		/opt/scripts/show-when-cron-will-destroy-infrastructure
            		fi

                else
                        echo "`date`: deploy error: infrastructure not running" >> /winattacklab/logs/terraform-destroy.log
                        echo "`date`: deploy error: infrastructure not running"
                fi

            fi

            ;;

        finished)
            case "$DESTROYED" in
                init)
                    echo "`date`: terraform is fully deployed" >> /winattacklab/logs/terraform-destroy.log
                    echo "`date`: terraform is fully deployed"
                    echo "`date`: user did not click on destroy" >> /winattacklab/logs/terraform-destroy.log
                    echo "`date`: user did not click on destroy" 

                    echo "====== Azure Resource Group ====="                                                                                                    
	            terraform state show 'azurerm_resource_group.winattacklabgroup' |grep id  | cut -d'/' -f5- | cut -d '"' -f1


                    if [ -e /winattacklab/terraform.end ]; then
                        /opt/scripts/show-when-cron-will-destroy-infrastructure
                    fi

                    echo "================================="   
                    echo "`date`: click on \"Run Task\" in the Ip Addresses menu to get the login credentials" 
                    echo "================================="   


                    ;;
                running)
                    ps -ef|grep "/usr/bin/terraform destroy"|grep -v grep > /dev/null
                    RESULT=$?
                    if [ $RESULT -eq 0 ]; then
                        echo "`date`: user clicked on the destroy button" >> /winattacklab/logs/terraform-destroy.log
                        echo "`date`: user clicked on the destroy button"
                        echo "`date`: terraform destroy has started" >> /winattacklab/logs/terraform-destroy.log
                        echo "`date`: terraform destroy has started"
                    else
                        echo "`date`: user clicked on the destroy button" >> /winattacklab/logs/terraform-destroy.log
                        echo "`date`: user clicked on the destroy button"

			terraform state show 'azurerm_resource_group.winattacklabgroup' >> /winattacklab/logs/terraform-destroy.log
			R1=$?
			if [ $R1 -eq 0 ]; then
				echo "`date`: destroy not finished yet: infrastructure still destroying" >> /winattacklab/logs/terraform-destroy.log
				echo "`date`: destroy not finished yet: infrastructure still destroying"
				echo "`date`: click on the \"Run Task\" in the Log menu to see the destroy log"
			else
				echo "`date`: infrastructure is fully down" >>  /winattacklab/logs/terraform-destroy.log
				echo "`date`: infrastructure is fully down"
                                echo "DESTROYED=\"finished\"" > /winattacklab/.destroy
                                echo "DEPLOYED=\"init\"" > /winattacklab/.deploy
			fi 

                    fi
                    ;;

                finished)
	 	    echo "`date`: destroy successfully finished - will reset deployment to init" >> /winattacklab/logs/terraform-destroy.log
	 	    echo "`date`: destroy successfully finished - will reset deployment to init"
                    echo "DEPLOYED=\"init\"" > /winattacklab/.deploy
                    echo "DESTROYED=\"init\"" > /winattacklab/.destroy
                    ;;
                *)
                    exit 1
                    ;;
	        esac
            ;;

        *)
            exit 1
            ;;

esac


